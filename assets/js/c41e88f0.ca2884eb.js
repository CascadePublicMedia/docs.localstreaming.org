"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7478],{37448:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>i,default:()=>l,frontMatter:()=>r,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"webhooks/request-validation","title":"Request validation","description":"Webhooks requests should be validated using the X-Webhook-Timestamp and X-Webhook-Signature headers and a shared secret key.","source":"@site/docs/webhooks/request-validation.md","sourceDirName":"webhooks","slug":"/webhooks/request-validation","permalink":"/webhooks/request-validation","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Request validation"},"sidebar":"webhooksSidebar","previous":{"title":"Request structure","permalink":"/webhooks/request-structure"},"next":{"title":"Webhooks","permalink":"/webhooks/"}}');var s=a(62540),o=a(43023);const r={title:"Request validation"},i=void 0,h={},d=[{value:"NodeJS example",id:"nodejs-example",level:2},{value:"PHP example",id:"php-example",level:2}];function c(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Webhooks requests should be validated using the ",(0,s.jsx)(t.a,{href:"request-structure#x-webhook-timestamp",children:(0,s.jsx)(t.code,{children:"X-Webhook-Timestamp"})})," and ",(0,s.jsx)(t.a,{href:"request-structure#x-webhook-signature",children:(0,s.jsx)(t.code,{children:"X-Webhook-Signature"})})," headers and a shared secret key."]}),"\n",(0,s.jsxs)(t.p,{children:["To verify the signature, create an SHA-256 hash of the request body with the ",(0,s.jsx)(t.code,{children:"X-Webhook-Timestamp"})," header value appended to it using the shared secret key for the webhook and convert it to base64. If the calculated hash matches the value of the ",(0,s.jsx)(t.code,{children:"X-Webhook-Signature"})," the request can be assumed to be valid."]}),"\n",(0,s.jsx)(t.h2,{id:"nodejs-example",children:"NodeJS example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"// Create digest with payload + hmac secret\nconst timestamp = request.get('X-Webhook-Timestamp')\nconst hashPayload = request.rawBody + timestamp\nconst hmac = crypto.createHmac('sha256', process.env.WEBHOOK_SECRET)\nconst digest = hmac.update(hashPayload).digest('base64')\n\n// Get hash sent by the provider\nconst providerSig = request.get('X-Webhook-Signature')\n\n// Compare digest signature with signature sent by provider\nif (providerSig.length == digest.length && crypto.timingSafeEqual(digest, providerSig)) {\n  // Webhook Authenticated!\n  console.log(request.json())\n}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"php-example",children:"PHP example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-php",children:"define('API_SECRET_KEY', 'my_webhook_api_secret');\n\nfunction verify_webhook($data, $hmac_header)\n{\n  # Calculate HMAC\n  $calculated_hmac = base64_encode(hash_hmac('sha256', $data, API_SECRET_KEY, true));\n  return hash_equals($hmac_header, $calculated_hmac);\n}\n\n# Extract the signature header\n$hmac_header = $_SERVER['X-Webhook-Signature'];\n\n# Combine the timestamp header value and raw body\n$timestamp = $_SERVER['X-Webhook-Timestamp'];\n$data = file_get_contents('php://input') + $timestamp;\n\n# Compare HMACs\n$verified = verify_webhook($data, $hmac_header);\n\nif ($verified) {\n  # Do something with the webhook data!\n}\n"})})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},43023:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>i});var n=a(63696);const s={},o=n.createContext(s);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);